[
    {
        "id": 1,
        "question": "What is the event loop in Node.js?",
        "choices": [
            "A. It is a feature in Node.js that allows asynchronous I/O operations to be executed efficiently.",
            "B. It is a mechanism in Node.js for handling HTTP requests and responses.",
            "C. It is a process in Node.js for managing memory allocation and garbage collection.",
            "D. It is a module in Node.js for creating custom event emitters."
        ],
        "answer": "A. It is a feature in Node.js that allows asynchronous I/O operations to be executed efficiently."
    },
    {
        "id": 2,
        "question": "What is a callback function in Node.js?",
        "choices": [
            "A. A function that is called at the end of a program execution.",
            "B. A function that handles errors in Node.js applications.",
            "C. A function that is passed as an argument to another function and is executed later.",
            "D. A function that runs asynchronously in Node.js."
        ],
        "answer": "C. A function that is passed as an argument to another function and is executed later."
    },
    {
        "id": 3,
        "question": "What is a module in Node.js?",
        "choices": [
            "A. A built-in function in Node.js for performing mathematical operations.",
            "B. A reusable block of code that encapsulates related functionality and can be imported into other files.",
            "C. A data structure in Node.js for storing key-value pairs.",
            "D. A tool in Node.js for managing package dependencies."
        ],
        "answer": "B. A reusable block of code that encapsulates related functionality and can be imported into other files."
    },
    {
        "id": 4,
        "question": "What is the purpose of the 'require' function in Node.js?",
        "choices": [
            "A. To define a new variable in Node.js.",
            "B. To import modules and files into a Node.js application.",
            "C. To create a new event emitter in Node.js.",
            "D. To execute a callback function in Node.js."
        ],
        "answer": "B. To import modules and files into a Node.js application."
    },
    {
        "id": 5,
        "question": "Which of the following is true about Node.js streams?",
        "choices": [
            "A. Streams are synchronous in nature.",
            "B. Streams are used for storing large amounts of data in memory.",
            "C. Streams provide a way to read or write data continuously.",
            "D. Streams cannot be used for network communication in Node.js."
        ],
        "answer": "C. Streams provide a way to read or write data continuously."
    },
    {
        "id": 6,
        "question": "What is the purpose of the 'fs' module in Node.js?",
        "choices": [
            "A. To perform file system operations such as reading and writing files.",
            "B. To create a new file structure in Node.js.",
            "C. To handle HTTP requests and responses in Node.js applications.",
            "D. To define custom functions for mathematical operations in Node.js."
        ],
        "answer": "A. To perform file system operations such as reading and writing files."
    },
    {
        "id": 7,
        "question": "What is the role of the 'path' module in Node.js?",
        "choices": [
            "A. To provide utilities for working with file paths.",
            "B. To handle HTTP requests and responses in Node.js applications.",
            "C. To define custom event emitters in Node.js.",
            "D. To perform mathematical operations in Node.js."
        ],
        "answer": "A. To provide utilities for working with file paths."
    },
    {
        "id": 8,
        "question": "Which of the following is a valid way to handle errors in Node.js?",
        "choices": [
            "A. Using try-catch blocks.",
            "B. Using if-else statements.",
            "C. Using switch-case statements.",
            "D. Using while loops."
        ],
        "answer": "A. Using try-catch blocks."
    },
    {
        "id": 9,
        "question": "What is the purpose of the 'util' module in Node.js?",
        "choices": [
            "A. To perform utility operations such as formatting and logging.",
            "B. To define custom event emitters in Node.js.",
            "C. To handle HTTP requests and responses in Node.js applications.",
            "D. To create a new file structure in Node.js."
        ],
        "answer": "A. To perform utility operations such as formatting and logging."
    },
    {
        "id": 10,
        "question": "What is the primary use case for the 'crypto' module in Node.js?",
        "choices": [
            "A. To perform cryptographic operations such as encryption and decryption.",
            "B. To handle HTTP requests and responses in Node.js applications.",
            "C. To define custom event emitters in Node.js.",
            "D. To perform file system operations such as reading and writing files."
        ],
        "answer": "A. To perform cryptographic operations such as encryption and decryption."
    },
    {
        "id": 11,
        "question": "What is the purpose of the 'child_process' module in Node.js?",
        "choices": [
            "A. To perform file system operations such as reading and writing files.",
            "B. To handle HTTP requests and responses in Node.js applications.",
            "C. To create child processes and execute external commands or scripts.",
            "D. To define custom event emitters in Node.js."
        ],
        "answer": "C. To create child processes and execute external commands or scripts."
    },
    {
        "id": 12,
        "question": "What is the role of the 'os' module in Node.js?",
        "choices": [
            "A. To perform mathematical operations such as addition and subtraction.",
            "B. To handle HTTP requests and responses in Node.js applications.",
            "C. To provide information about the operating system such as CPU, memory, and network interfaces.",
            "D. To define custom event emitters in Node.js."
        ],
        "answer": "C. To provide information about the operating system such as CPU, memory, and network interfaces."
    },
    {
        "id": 13,
        "question": "What is the purpose of the 'events' module in Node.js?",
        "choices": [
            "A. To perform mathematical operations.",
            "B. To handle HTTP requests and responses.",
            "C. To create and handle custom events in Node.js applications.",
            "D. To define custom event emitters."
        ],
        "answer": "C. To create and handle custom events in Node.js applications."
    },
    {
        "id": 14,
        "question": "What is the significance of the 'process' object in Node.js?",
        "choices": [
            "A. It provides methods for performing file system operations.",
            "B. It handles HTTP requests and responses in Node.js applications.",
            "C. It provides information about the current Node.js process and allows interaction with the operating system.",
            "D. It defines custom event emitters in Node.js."
        ],
        "answer": "C. It provides information about the current Node.js process and allows interaction with the operating system."
    },
    {
        "id": 15,
        "question": "How does Node.js handle blocking and non-blocking operations?",
        "choices": [
            "A. Node.js uses synchronous operations for all tasks.",
            "B. Node.js uses asynchronous operations for all tasks.",
            "C. Node.js utilizes a single thread with non-blocking I/O operations to handle multiple requests concurrently.",
            "D. Node.js utilizes multiple threads to handle blocking I/O operations efficiently."
        ],
        "answer": "C. Node.js utilizes a single thread with non-blocking I/O operations to handle multiple requests concurrently."
    }
]